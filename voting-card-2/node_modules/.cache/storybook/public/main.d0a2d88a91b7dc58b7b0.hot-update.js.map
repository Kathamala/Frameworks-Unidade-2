{"version":3,"file":"main.d0a2d88a91b7dc58b7b0.hot-update.js","sources":["webpack:///./src/stories/voting-card.stories.js"],"sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import Card  from '../components/voting-card.vue';\\n\\n//👇 This default export determines where your story goes in the story list\\nexport default {\\n  title: 'VotingCard',\\n  component: Card,\\n  argTypes: {\\n    state: {\\n      options: ['open', 'closed'],\\n      control: {type: 'radio'},\\n    }\\n  }\\n};\\n\\n//👇 We create a “template” of how args map to rendering\\n\\nconst Template = (args, {argTypes}) => ({\\n  components: { Card },\\n  setup() {\\n    return { args };\\n  },\\n  template: '<Card v-bind=\\\"args\\\"/>',\\n});\\n\\nexport const FirstStory = Template.bind({});\\nFirstStory.storyName = \\\"Segue o relator\\\";\\nFirstStory.args = {\\n    title: \\\"Segue o relator?\\\",\\n    state: \\\"open\\\",\\n    votes: [\\n        {\\n          \\\"text\\\": \\\"Sim\\\",\\n          \\\"count\\\": 8\\n        },\\n        {\\n          \\\"text\\\": \\\"Não\\\",\\n          \\\"count\\\": 3\\n        }\\n      ]\\n};\\n\\nexport const SecondStory = Template.bind({});\\nSecondStory.storyName = \\\"Continuamos amanhã\\\";\\nSecondStory.args = {\\n    title: \\\"Continuamos amanhã?\\\",\\n    state: \\\"closed\\\",\\n    votes: [\\n        {\\n            \\\"text\\\": \\\"Sim\\\",\\n            \\\"count\\\": 8\\n        },\\n        {\\n            \\\"text\\\": \\\"Talvez\\\",\\n            \\\"count\\\": 6\\n        },\\n        {\\n            \\\"text\\\": \\\"Não\\\",\\n            \\\"count\\\": 3\\n        }\\n      ]\\n};\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"FirstStory\":{\"startLoc\":{\"col\":17,\"line\":17},\"endLoc\":{\"col\":2,\"line\":23},\"startBody\":{\"col\":17,\"line\":17},\"endBody\":{\"col\":2,\"line\":23}},\"SecondStory\":{\"startLoc\":{\"col\":17,\"line\":17},\"endLoc\":{\"col\":2,\"line\":23},\"startBody\":{\"col\":17,\"line\":17},\"endBody\":{\"col\":2,\"line\":23}}};\n    \nimport Card  from '../components/voting-card.vue';\n\n//👇 This default export determines where your story goes in the story list\nexport default {\n  title: 'VotingCard',\n  component: Card,\n  argTypes: {\n    state: {\n      options: ['open', 'closed'],\n      control: {type: 'radio'},\n    }\n  }\n};\n\n//👇 We create a “template” of how args map to rendering\n\nconst Template = (args, {argTypes}) => ({\n  components: { Card },\n  setup() {\n    return { args };\n  },\n  template: '<Card v-bind=\"args\"/>',\n});\n\nexport const FirstStory = Template.bind({});;\nFirstStory.storyName = \"Segue o relator\";\nFirstStory.args = {\n    title: \"Segue o relator?\",\n    state: \"open\",\n    votes: [\n        {\n          \"text\": \"Sim\",\n          \"count\": 8\n        },\n        {\n          \"text\": \"Não\",\n          \"count\": 3\n        }\n      ]\n};\n\nexport const SecondStory = Template.bind({});\nSecondStory.storyName = \"Continuamos amanhã\";\nSecondStory.args = {\n    title: \"Continuamos amanhã?\",\n    state: \"closed\",\n    votes: [\n        {\n            \"text\": \"Sim\",\n            \"count\": 8\n        },\n        {\n            \"text\": \"Talvez\",\n            \"count\": 6\n        },\n        {\n            \"text\": \"Não\",\n            \"count\": 3\n        }\n      ]\n};\n\n\nFirstStory.parameters = { storySource: { source: \"(args, {argTypes}) => ({\\n  components: { Card },\\n  setup() {\\n    return { args };\\n  },\\n  template: '<Card v-bind=\\\"args\\\"/>',\\n})\" }, ...FirstStory.parameters };\nSecondStory.parameters = { storySource: { source: \"(args, {argTypes}) => ({\\n  components: { Card },\\n  setup() {\\n    return { args };\\n  },\\n  template: '<Card v-bind=\\\"args\\\"/>',\\n})\" }, ...SecondStory.parameters };"],"mappings":";;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AADA;AAHA;AACA;AAYA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AALA;AAAA;AACA;AAOA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AARA;AAeA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAZA;AAoBA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}